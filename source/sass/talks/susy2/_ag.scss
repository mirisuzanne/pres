// AG Demos
// ========

$global: $susy;
$susy: ();

%ag {
  @extend %code;
  box-shadow: 0 0 0 1px color(darker) inset;

  h1 {
    @include rhythm-padding(.25);
    @include trailer(.5);
    background: color(darker);
    color: color(lightest);
    text-align: center;
    text-shadow: 0 1px 0 color(darkest);
  }

  .ag-item {
    @include background-clip(content-box);
    @include trailer(.5);
    border: 1px solid color(darker);
    color: transparent;
    min-height: rhythm(3);
    text-shadow: none;
  }

  .size1of2 { background-color: color(lighter $red); }
  .size1of5 { background-color: color(lighter $blue); }
  .size1of3 { background-color: color(lighter $orange); }
  .full.ag-item { background-color: color(lighter $pink); }

  .gallery {
    @include susy-clearfix;
    clear: both;
    div {
      @include background-clip(content-box);
      @include trailer(.5);
      height: rhythm(1);
      background-color: color(lighter $red);
      border: 1px solid color(darker);
    }
  }
}

@mixin ag(
  $slug,
  $layout
) {
  @include with-layout($layout) {
    .ag-container.#{$slug} {
      @extend %ag;
      @include container;
      @include leader(.5);
      @include trailer(.5);

      > .size1of5 {
        min-height: rhythm(10);
        &:first-of-type { @include span(2 at 1); }
        ~ .size1of5 { @include span(last 2); }
      }
      > .size3of5 {
        @include span(6 at 3 nest);
        > .size1of2 {
          &:first-child { @include span(3 at 1 of nested(6 at 3)); }
          + .size1of2 { @include span(last 3 of nested(6 at 3)); }
        }
        > .full {
          @include full(nest);
          background: none;
        }
      }

      .full {
        @include nested(6 at 3) {
          .size1of3 {
            @include span(first 2);
            min-height: rhythm(6.5);
          }
          .size2of3 {
            @include span(4 omega nest);
          }
        }
      }

      .size2of3 {
        .size1of2 {
          @include nested(4 at 5) {
            &:first-child { @include span(2 alpha); }
            + .size1of2 { @include span(last 2); }
          }
        }
        .full {
          @include full(of nested(4 at 5));
        }
      }

      .gallery {
        div {
          @include gallery(2);
        }
      }
    }
  }
}


// Demos
// -----

@include ag('sym', 10 .25 after show-columns);
@include ag('asym', (1 2 1 1 3 1 3 2 1 4) .5 before isolate show-columns);
@include ag('inside', 30em 10 .25 inside show-columns);
@include ag('inside-static', 10 (4em 1em) inside-static show-columns);
@include ag('static', 10 (80px 20px) static split rtl show-columns);

$susy: $global;
