// Bio Slides
// ==========


@function replace-nth($list, $index, $value) {
  $result: null;

  @if type-of($index) != number {
    @warn "$index: #{quote($index)} is not a number for `replace-nth`.";
  }

  @else if $index == 0 {
    @warn "List index 0 must be a non-zero integer for `replace-nth`.";
  }

  @else if abs($index) > length($list) {
    @warn "List index is #{$index} but list is only #{length($list)} item long for `replace-nth`.";
  }

  @else {
    $result: ();
    $index: if($index < 0, length($list) + $index + 1, $index);

    @for $i from 1 through length($list) {
      @if $i == $index {
        $result: append($result, $value, comma);
      }

      @else {
        $result: append($result, nth($list, $i), comma);
      }
    }
  }

  @return $result;
}


// Logos
// -----

$logos: (
  bio-compass: $red,
  bio-oddbird: $orange,
  bio-susy: $pink,
);

@each $slide, $color in $logos {
  @include slide($slide) {
    [data-icon] {
      @include font-size(12);
      color: $color;
      display: block;
      text-align: center;
    }
  }
}


// True
// ----

@include slide(bio-true, terminal) {
  .head { @include font-size(10); }
}


// Art
// ---

$_tg: 'susy2/artsy/tg';
$_frames: 8;

$_art: ();
$_pos: 90em 90em, 90em 90em, 90em 90em, 90em 90em, 90em 90em, 90em 90em, 90em 90em, 90em 90em;

@for $i from 1 through $_frames {
  $_art: append($_art, image-url('#{$_tg + $i}.jpg'), comma) !global;
}

@include keyframes(tg) {
  $prev: null;
  @for $i from 0 to $_frames {
    $key: 100% / ($_frames - 1) * $i;
    #{if($prev, '#{$prev}, ', '')} #{$key} {
      background-position: replace-nth($_pos, $i + 1, 0 0);
    }
    $prev: $key;
  }
}

@include slide(bio-art, vertical-center invert-colors) {
  @include background-size(cover);
  background-image: $_art;
  background-position: center;
  background-repeat: no-repeat;

  @include is-active(bio-art) {
    @include animation(tg 2s steps(1) 3 alternate both);
  }
}

